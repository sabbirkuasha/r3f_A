/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 .\cybertruck.gltf --draco 
*/

// import React, { useRef } from 'react'
import { useGLTF } from "@react-three/drei";

import * as THREE from "three";
import { shaderMaterial } from "@react-three/drei";
import { extend } from "@react-three/fiber";
console.log(THREE.ShaderMaterial);
console.log(shaderMaterial);

import stripefragment from "../../shaders/stripes.fragment.glsl";
import stripeVertex from "../../shaders/stripes.vertex.glsl";

const TestShaderMaterial = shaderMaterial(
  {
    uAlpha: 0.5,
    uMultiplier: 80,
  },
  stripeVertex,
  stripefragment
);

// declaratively
extend({ TestShaderMaterial });

export function Cybertruck(props) {
  const { nodes, materials } = useGLTF("3dModel/CyberTruck/cybertruck.gltf");
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.steer.geometry} material={materials.gray} />
      <mesh geometry={nodes.interior001.geometry} material={materials.lights} />
      <mesh geometry={nodes.interior001_1.geometry} material={materials.body} />
      <mesh
        geometry={nodes.interior001_2.geometry}
        material={materials.glass}
      />
      <mesh
        geometry={nodes.interior001_3.geometry}
        material={materials.glassframes}
      />
      <mesh
        geometry={nodes.interior001_4.geometry}
        material={materials.warninglights}
      />
      <mesh
        geometry={nodes.interior001_5.geometry}
        material={materials.black}
      />
      <mesh
        geometry={nodes.interior001_6.geometry}
        // material={materials.shader}
      >
        {/* <meshBasicMaterial color={"red"} opacity={0.4} transparent /> */}
        <testShaderMaterial transparent />
      </mesh>
      <mesh geometry={nodes.tires001.geometry} material={materials.tires} />
      <mesh geometry={nodes.tires001_1.geometry} material={materials.rims} />
    </group>
  );
}

useGLTF.preload("3dModel/CyberTruck/cybertruck.gltf");
